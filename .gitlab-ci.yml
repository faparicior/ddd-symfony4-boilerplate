image: "php:7.4-apache-buster"

# Cache libraries in between jobs
cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - vendor/
        - bin
        - var
        - node_modules

before_script:
    - apt -y update
    - a2enmod rewrite
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php');"
    - mv composer.phar /usr/local/bin/composer
    - curl -sS https://get.symfony.com/cli/installer | bash
    - mv /root/.symfony/bin/symfony /usr/local/bin
#    - groupadd -r devel -g 1000
#    - useradd --no-log-init -u 1000 -r -g devel devel
    - apt -y install git libzip-dev unzip
    - docker-php-ext-install zip
    - pecl install xdebug-2.9.4
    - echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini
    - echo "xdebug.remote_enable=on" >> /usr/local/etc/php/conf.d/xdebug.ini
    - echo "xdebug.remote_autostart=off" >> /usr/local/etc/php/conf.d/xdebug.ini
    - apt -y install nodejs npm
    - cp docker/gitlab-ci/httpd.conf /etc/apache2/sites-enabled/000-default.conf
    - apache2ctl restart
#    - curl -L "https://github.com/gohugoio/hugo/releases/download/v0.70.0/hugo_extended_0.70.0_Linux-64bit.deb" --output hugo-70-extended.deb
#    - dpkg -i hugo-70-extended.deb

build php:
    stage: build
    script: sh ./.gitlabci/build.sh
    rules:
        - if: $CI_COMMIT_BRANCH == 'master'   # Execute jobs when a new commit is pushed to master branch
        - if: $CI_MERGE_REQUEST_ID

build javascript:
    stage: build
#    image: node:14.0-stretch
    script: npm install
    rules:
        - if: $CI_COMMIT_BRANCH == 'master'   # Execute jobs when a new commit is pushed to master branch
        - if: $CI_MERGE_REQUEST_ID

unit test:
    stage: test
    script: sh ./.gitlabci/unit-test.sh
    rules:
        - if: $CI_COMMIT_BRANCH == 'master'   # Execute jobs when a new commit is pushed to master branch
        - if: $CI_MERGE_REQUEST_ID
    artifacts:
        paths:
            - build
            - doc/hugo/public
            - cypress/videos
            - cypress/screenshots
        expire_in: 1 hour

functional test:
    stage: test
    script: sh ./.gitlabci/functional-test.sh
    rules:
        - if: $CI_COMMIT_BRANCH == 'master'   # Execute jobs when a new commit is pushed to master branch
        - if: $CI_MERGE_REQUEST_ID
    artifacts:
        paths:
            - cypress/videos
            - cypress/screenshots
        expire_in: 1 hour

pages:
    before_script:
        - echo "Do nothing in this stage"
    stage: deploy
    dependencies:
        - unit test
        - functional test
    script:
        - bash ./.gitlabci/deploy-pages.sh
    artifacts:
        paths:
            - public
        expire_in: 1 day
    only:
        - master
